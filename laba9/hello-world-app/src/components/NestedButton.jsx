/*import React from 'react';
import PropTypes from 'prop-types';

const NestedButton = ({ stopPropagation = false }) => {
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–Ω–µ—à–Ω–µ–π –∫–Ω–æ–ø–∫–∏
  const handleOuterClick = (e) => {
    if (stopPropagation) {
      e.stopPropagation(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ, –µ—Å–ª–∏ –ø—Ä–æ–ø—Å true
    }
    alert('–°—Ä–∞–±–æ—Ç–∞–ª –∫–ª–∏–∫ –ø–æ –≤–Ω–µ—à–Ω–µ–π –∫–Ω–æ–ø–∫–µ!');
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∫–Ω–æ–ø–∫–∏
  const handleInnerPrimaryClick = (e) => {
    e.stopPropagation(); // –í—Å–µ–≥–¥–∞ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    alert('–ü–µ—Ä–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∫–Ω–æ–ø–∫–∏');
  };

  const handleInnerSecondaryClick = (e) => {
    if (stopPropagation) {
      e.stopPropagation();
    }
    alert('–í—Ç–æ—Ä–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∫–Ω–æ–ø–∫–∏');
  };

  return (
    <div style={{ 
      padding: '20px', 
      border: '2px dashed #4a90e2',
      borderRadius: '8px',
      margin: '15px',
      maxWidth: '400px'
    }}>
      /* –í–Ω–µ—à–Ω—è—è –∫–Ω–æ–ø–∫–∞ */
      /*<button 
        onClick={handleOuterClick}
        style={{
          padding: '12px 20px',
          margin: '10px',
          backgroundColor: '#4a90e2',
          color: 'white',
          border: 'none',
          borderRadius: '4px',
          cursor: 'pointer',
          fontSize: '16px'
        }}
      >
        {/* –¢–µ–∫—Å—Ç –∏ –∏–∫–æ–Ω–∫–∞ –≤–Ω–µ—à–Ω–µ–π –∫–Ω–æ–ø–∫–∏ */
        /*<span style={{ marginRight: '8px' }}>üõ°Ô∏è</span>
        –ì–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞
        <div style={{ fontSize: '12px', marginTop: '5px' }}>
          –ù–∞–∂–º–∏—Ç–µ –º–µ–Ω—è, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
        </div>
        
        {/* –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –∫–Ω–æ–ø–∫–∞ */
        /*<button 
          onClick={(e) => {
            handleInnerPrimaryClick(e);
            handleInnerSecondaryClick(e);
          }}
          style={{
            padding: '8px 15px',
            margin: '10px 0',
            backgroundColor: '#f0f0f0',
            border: '1px solid #ddd',
            borderRadius: '4px',
            cursor: 'pointer',
            display: 'block',
            width: '100%'
          }}
        >
          /* –¢–µ–∫—Å—Ç –∏ –∏–∫–æ–Ω–∫–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∫–Ω–æ–ø–∫–∏ */
          /*<span style={{ marginRight: '8px' }}>‚öôÔ∏è</span>
          –í–ª–æ–∂–µ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞
          <div style={{ fontSize: '11px', color: '#666', marginTop: '3px' }}>
            –£ –º–µ–Ω—è –¥–≤–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–ª–∏–∫–∞
          </div>
        </button>
      </button>
    </div>
  );
};

NestedButton.propTypes = {
  stopPropagation: PropTypes.bool
};

export default NestedButton;*/

/*import React, { useState } from 'react';
import PropTypes from 'prop-types';

const NestedButton = ({ stopPropagation = false }) => {
  const [isInnerVisible, setInnerVisible] = useState(true);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–Ω–µ—à–Ω–µ–π –∫–Ω–æ–ø–∫–∏
  const handleOuterClick = (e) => {
    if (stopPropagation) {
      e.stopPropagation();
      alert('–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–Ω–µ—à–Ω–µ–π –∫–Ω–æ–ø–∫–∏');
    }
    setInnerVisible(!isInnerVisible); // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∫–Ω–æ–ø–∫–∏
    alert('–í–Ω–µ—à–Ω—è—è –∫–Ω–æ–ø–∫–∞: –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –∫–Ω–æ–ø–∫–∞ ' + 
          (isInnerVisible ? '—Å–∫—Ä—ã—Ç–∞' : '–ø–æ–∫–∞–∑–∞–Ω–∞'));
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∫–Ω–æ–ø–∫–∏
  const handleInnerClick1 = (e) => {
    e.stopPropagation();
    alert('–ü–µ—Ä–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∫–Ω–æ–ø–∫–∏');
  };

  const handleInnerClick2 = (e) => {
    if (stopPropagation) {
      e.stopPropagation();
    }
    alert('–í—Ç–æ—Ä–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∫–Ω–æ–ø–∫–∏');
  };

  return (
    <div style={{ 
      padding: '20px', 
      border: '2px dashed #4a90e2',
      borderRadius: '8px',
      margin: '15px',
      maxWidth: '400px'
    }}>
      {/* –í–Ω–µ—à–Ω—è—è –∫–Ω–æ–ø–∫–∞ */
      /*<button 
        onClick={handleOuterClick}
        style={{
          padding: '12px 20px',
          margin: '10px',
          backgroundColor: '#4a90e2',
          color: 'white',
          border: 'none',
          borderRadius: '4px',
          cursor: 'pointer',
          fontSize: '16px',
          position: 'relative' // –î–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∫–Ω–æ–ø–∫–∏
        }}
      >
        <span style={{ marginRight: '8px' }}>üõ°Ô∏è</span>
        {isInnerVisible ? '–°–∫—Ä—ã—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –∫–Ω–æ–ø–∫—É' : '–ü–æ–∫–∞–∑–∞—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –∫–Ω–æ–ø–∫—É'}
        
        {/* –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –∫–Ω–æ–ø–∫–∞ (—É—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥) */
        /*{isInnerVisible && (
          <button 
            onClick={(e) => {
              handleInnerClick1(e);
              handleInnerClick2(e);
            }}
            style={{
              padding: '8px 15px',
              margin: '10px 0',
              backgroundColor: '#f0f0f0',
              border: '1px solid #ddd',
              borderRadius: '4px',
              cursor: 'pointer',
              display: 'block',
              width: '100%'
            }}
          >
            <span style={{ marginRight: '8px' }}>‚öôÔ∏è</span>
            –í–ª–æ–∂–µ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞
            <div style={{ fontSize: '11px', color: '#666', marginTop: '3px' }}>
              –£ –º–µ–Ω—è –¥–≤–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–ª–∏–∫–∞
            </div>
          </button>
        )}
      </button>
    </div>
  );
};

NestedButton.propTypes = {
  stopPropagation: PropTypes.bool
};

export default NestedButton;*/

//—É–±—Ä–∞—Ç—å —Å–∫—Ä—ã—Ç–∏–µ –∫–Ω–æ–ø–∫–∏, –Ω–∞–ø–∏—Å–∞—Ç—å —Ç–µ—Å—Ç—ã. 4 —Ç–µ—Å—Ç–∞: 1- –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∫–Ω–æ–ø–∫–∏, 2- –Ω–∞–∂–∞—Ç–∏–µ –≤–Ω–µ—à–Ω–µ–π. –±—É–ª–∏–∫- true 2 —Ç–µ—Å—Ç–∞ –∏ false -2 —Ç–µ—Å—Ç–∞

import React from 'react';
import PropTypes from 'prop-types';

const NestedButton = ({ stopPropagation = false }) => {
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–Ω–µ—à–Ω–µ–π –∫–Ω–æ–ø–∫–∏
  const handleOuterClick = (e) => {
    if (stopPropagation) {
      e.stopPropagation();
    }
    alert('–í–Ω–µ—à–Ω—è—è –∫–Ω–æ–ø–∫–∞ clicked');
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∫–Ω–æ–ø–∫–∏
  const handleInnerClick = (e) => {
    if (stopPropagation) {
      e.stopPropagation();
    }
    alert('–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –∫–Ω–æ–ø–∫–∞ clicked - 1');
    
  };

  return (
    <div style={{ padding: '20px', border: '1px solid #ccc' }}>
      
      <div
        onClick={handleOuterClick}
        role="button"
        tabIndex="0"
        data-testid="outer-button"
        style={{ 
          padding: '10px', 
          margin: '5px',
          cursor: 'pointer',
          border: '1px solid #999'
        }}
      >
        Outer Button
        
        <button 
          onClick={handleInnerClick}
          data-testid="inner-button"
          style={{ 
            padding: '8px', 
            margin: '5px', 
            backgroundColor: '#f0f0f0',
            display: 'block'
          }}
        >
          Inner Button
        </button>
      </div>
    </div>
  );
};

NestedButton.propTypes = {
  stopPropagation: PropTypes.bool
};

export default NestedButton;

